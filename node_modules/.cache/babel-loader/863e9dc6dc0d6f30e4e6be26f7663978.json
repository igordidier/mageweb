{"ast":null,"code":"var _jsxFileName = \"/Users/igor/Documents/mage-template/src/layouts/billing/components/BaseLayout/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\"; // Argon Dashboard 2 MUI components\n\nimport ArgonBox from \"components/ArgonBox\"; // Argon Dashboard 2 MUI base styles\n\nimport breakpoints from \"assets/theme/base/breakpoints\"; // Argon Dashboard 2 MUI example components\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BaseLayout(_ref) {\n  _s();\n\n  let {\n    stickyNavbar,\n    children\n  } = _ref;\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm ? setTabsOrientation(\"vertical\") : setTabsOrientation(\"horizontal\");\n    }\n    /** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */\n\n\n    window.addEventListener(\"resize\", handleTabsOrientation); // Call the handleTabsOrientation function to set the state with the initial value.\n\n    handleTabsOrientation(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {\n      absolute: !stickyNavbar,\n      isMini: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArgonBox, {\n      mt: stickyNavbar ? 3 : 10,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              orientation: tabsOrientation,\n              value: tabValue,\n              onChange: handleSetTabValue,\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Social\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Backup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of BaseLayout\n\n\n_s(BaseLayout, \"dqRNHF4lTFQFTiomXMDTwDH/T4Q=\");\n\n_c = BaseLayout;\nBaseLayout.defaultProps = {\n  stickyNavbar: false\n}; // Typechecking props for BaseLayout\n\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default BaseLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseLayout\");","map":{"version":3,"names":["useState","useEffect","PropTypes","Grid","AppBar","Tabs","Tab","ArgonBox","breakpoints","DashboardLayout","DashboardNavbar","Footer","BaseLayout","stickyNavbar","children","tabsOrientation","setTabsOrientation","tabValue","setTabValue","handleTabsOrientation","window","innerWidth","values","sm","addEventListener","removeEventListener","handleSetTabValue","event","newValue","defaultProps","propTypes","bool","node","isRequired"],"sources":["/Users/igor/Documents/mage-template/src/layouts/billing/components/BaseLayout/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\n\n// Argon Dashboard 2 MUI base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\n// Argon Dashboard 2 MUI example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\nfunction BaseLayout({ stickyNavbar, children }) {\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm\n        ? setTabsOrientation(\"vertical\")\n        : setTabsOrientation(\"horizontal\");\n    }\n\n    /** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleTabsOrientation);\n\n    // Call the handleTabsOrientation function to set the state with the initial value.\n    handleTabsOrientation();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar absolute={!stickyNavbar} isMini />\n      <ArgonBox mt={stickyNavbar ? 3 : 10}>\n        <Grid container>\n          <Grid item xs={12} sm={8} lg={4}>\n            <AppBar position=\"static\">\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\n                <Tab label=\"Messages\" />\n                <Tab label=\"Social\" />\n                <Tab label=\"Notifications\" />\n                <Tab label=\"Backup\" />\n              </Tabs>\n            </AppBar>\n          </Grid>\n        </Grid>\n        {children}\n      </ArgonBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\n// Setting default values for the props of BaseLayout\nBaseLayout.defaultProps = {\n  stickyNavbar: false,\n};\n\n// Typechecking props for BaseLayout\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default BaseLayout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}