{"ast":null,"code":"var _jsxFileName = \"/Users/igor/Documents/mage-template/src/examples/Tables/SalesTable/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\"; // Argon Dashboard 2 MUI components\n\nimport ArgonTypography from \"components/ArgonTypography\";\nimport ArgonBox from \"components/ArgonBox\"; // Argon Dashboard 2 MUI example components\n\nimport SalesTableCell from \"examples/Tables/SalesTable/SalesTableCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SalesTable(_ref) {\n  _s();\n\n  let {\n    title,\n    rows\n  } = _ref;\n  const renderTableCells = rows.map((row, key) => {\n    const tableRows = [];\n    const rowKey = `row-${key}`;\n    Object.entries(row).map(_ref2 => {\n      let [cellTitle, cellContent] = _ref2;\n      return Array.isArray(cellContent) ? tableRows.push( /*#__PURE__*/_jsxDEV(SalesTableCell, {\n        title: cellTitle,\n        content: cellContent[1],\n        image: cellContent[0],\n        noBorder: key === rows.length - 1\n      }, cellContent[1], false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : tableRows.push( /*#__PURE__*/_jsxDEV(SalesTableCell, {\n        title: cellTitle,\n        content: cellContent,\n        noBorder: key === rows.length - 1\n      }, cellContent, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: tableRows\n    }, rowKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    sx: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(ArgonBox, {\n          component: \"tr\",\n          width: \"max-content\",\n          display: \"block\",\n          mb: 1.5,\n          children: /*#__PURE__*/_jsxDEV(ArgonTypography, {\n            variant: \"h6\",\n            component: \"td\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: useMemo(() => renderTableCells, [rows])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of SalesTable\n\n\n_s(SalesTable, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c = SalesTable;\nSalesTable.defaultProps = {\n  rows: [{}]\n}; // Typechecking props for the SalesTable\n\nSalesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.object)\n};\nexport default SalesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesTable\");","map":{"version":3,"names":["useMemo","PropTypes","Table","TableBody","TableContainer","TableHead","TableRow","ArgonTypography","ArgonBox","SalesTableCell","SalesTable","title","rows","renderTableCells","map","row","key","tableRows","rowKey","Object","entries","cellTitle","cellContent","Array","isArray","push","length","height","defaultProps","propTypes","string","isRequired","arrayOf","object"],"sources":["/Users/igor/Documents/mage-template/src/examples/Tables/SalesTable/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonTypography from \"components/ArgonTypography\";\nimport ArgonBox from \"components/ArgonBox\";\n\n// Argon Dashboard 2 MUI example components\nimport SalesTableCell from \"examples/Tables/SalesTable/SalesTableCell\";\n\nfunction SalesTable({ title, rows }) {\n  const renderTableCells = rows.map((row, key) => {\n    const tableRows = [];\n    const rowKey = `row-${key}`;\n\n    Object.entries(row).map(([cellTitle, cellContent]) =>\n      Array.isArray(cellContent)\n        ? tableRows.push(\n            <SalesTableCell\n              key={cellContent[1]}\n              title={cellTitle}\n              content={cellContent[1]}\n              image={cellContent[0]}\n              noBorder={key === rows.length - 1}\n            />\n          )\n        : tableRows.push(\n            <SalesTableCell\n              key={cellContent}\n              title={cellTitle}\n              content={cellContent}\n              noBorder={key === rows.length - 1}\n            />\n          )\n    );\n\n    return <TableRow key={rowKey}>{tableRows}</TableRow>;\n  });\n\n  return (\n    <TableContainer sx={{ height: \"100%\" }}>\n      <Table>\n        <TableHead>\n          <ArgonBox component=\"tr\" width=\"max-content\" display=\"block\" mb={1.5}>\n            <ArgonTypography variant=\"h6\" component=\"td\">\n              {title}\n            </ArgonTypography>\n          </ArgonBox>\n        </TableHead>\n        <TableBody>{useMemo(() => renderTableCells, [rows])}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n// Setting default values for the props of SalesTable\nSalesTable.defaultProps = {\n  rows: [{}],\n};\n\n// Typechecking props for the SalesTable\nSalesTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  rows: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default SalesTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}